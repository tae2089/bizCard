// Code generated by mockery v2.10.0. DO NOT EDIT.

package application

import (
	domain "bizCard/domain"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockBizCardService is an autogenerated mock type for the BizCardService type
type MockBizCardService struct {
	mock.Mock
}

// DeleteBizCard provides a mock function with given fields: uid, ctx
func (_m *MockBizCardService) DeleteBizCard(uid int, ctx context.Context) string {
	ret := _m.Called(uid, ctx)

	var r0 string
	if rf, ok := ret.Get(0).(func(int, context.Context) string); ok {
		r0 = rf(uid, ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// FindBizCard provides a mock function with given fields: uid, ctx
func (_m *MockBizCardService) FindBizCard(uid int, ctx context.Context) *domain.BizCardInfo {
	ret := _m.Called(uid, ctx)

	var r0 *domain.BizCardInfo
	if rf, ok := ret.Get(0).(func(int, context.Context) *domain.BizCardInfo); ok {
		r0 = rf(uid, ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.BizCardInfo)
		}
	}

	return r0
}

// RegisterBizCard provides a mock function with given fields: bizCardDto, ctx
func (_m *MockBizCardService) RegisterBizCard(bizCardDto *domain.BizCardRegister, ctx context.Context) *domain.BizCardInfo {
	ret := _m.Called(bizCardDto, ctx)

	var r0 *domain.BizCardInfo
	if rf, ok := ret.Get(0).(func(*domain.BizCardRegister, context.Context) *domain.BizCardInfo); ok {
		r0 = rf(bizCardDto, ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.BizCardInfo)
		}
	}

	return r0
}

// UpdateBizCard provides a mock function with given fields: uid, bizCardUpdate, ctx
func (_m *MockBizCardService) UpdateBizCard(uid int, bizCardUpdate *domain.BizCardUpdate, ctx context.Context) *domain.BizCardInfo {
	ret := _m.Called(uid, bizCardUpdate, ctx)

	var r0 *domain.BizCardInfo
	if rf, ok := ret.Get(0).(func(int, *domain.BizCardUpdate, context.Context) *domain.BizCardInfo); ok {
		r0 = rf(uid, bizCardUpdate, ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.BizCardInfo)
		}
	}

	return r0
}
