// Code generated by mockery v2.10.0. DO NOT EDIT.

package application

import (
	domain "bizCard/domain"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockUserService is an autogenerated mock type for the UserService type
type MockUserService struct {
	mock.Mock
}

// LoginUser provides a mock function with given fields: loginForm, ctx
func (_m *MockUserService) LoginUser(loginForm domain.UserLoginForm, ctx context.Context) (domain.UserInfo, int) {
	ret := _m.Called(loginForm, ctx)

	var r0 domain.UserInfo
	if rf, ok := ret.Get(0).(func(domain.UserLoginForm, context.Context) domain.UserInfo); ok {
		r0 = rf(loginForm, ctx)
	} else {
		r0 = ret.Get(0).(domain.UserInfo)
	}

	var r1 int
	if rf, ok := ret.Get(1).(func(domain.UserLoginForm, context.Context) int); ok {
		r1 = rf(loginForm, ctx)
	} else {
		r1 = ret.Get(1).(int)
	}

	return r0, r1
}

// RegisterUser provides a mock function with given fields: userRegister, ctx
func (_m *MockUserService) RegisterUser(userRegister domain.UserRegister, ctx context.Context) domain.UserInfo {
	ret := _m.Called(userRegister, ctx)

	var r0 domain.UserInfo
	if rf, ok := ret.Get(0).(func(domain.UserRegister, context.Context) domain.UserInfo); ok {
		r0 = rf(userRegister, ctx)
	} else {
		r0 = ret.Get(0).(domain.UserInfo)
	}

	return r0
}
